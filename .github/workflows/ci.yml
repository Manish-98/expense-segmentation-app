name: CI - Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-build-and-test:
    name: Backend Build & Test
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./expense-segmentation-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Check code formatting with Spotless
        run: ./gradlew spotlessCheck --no-daemon

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      - name: Run tests
        run: ./gradlew test --no-daemon

      - name: Generate coverage report
        run: ./gradlew jacocoTestReport --no-daemon

      - name: Verify code coverage
        run: ./gradlew jacocoTestCoverageVerification --no-daemon

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: expense-segmentation-backend/build/reports/tests/test/

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: expense-segmentation-backend/build/reports/jacoco/test/

  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./expense-segmentation-frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: expense-segmentation-frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build
        env:
          VITE_API_BASE_URL: http://localhost:8080

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: expense-segmentation-frontend/dist/

  summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [backend-build-and-test, frontend-build]
    if: always()

    steps:
      - name: Check build status
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Backend   | ${{ needs.backend-build-and-test.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Frontend  | ${{ needs.frontend-build.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.backend-build-and-test.result }}" != "success" ]] || [[ "${{ needs.frontend-build.result }}" != "success" ]]; then
            echo "❌ Build failed" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "✅ All builds passed successfully!" >> $GITHUB_STEP_SUMMARY
          fi
